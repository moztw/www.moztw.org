<!DOCTYPE html>

<meta charset="utf-8">
<title>歡迎參加 MozTW 摩茲連續聚</title>

<!-- Your Slides -->
<!-- One section is one slide -->

<section>
    <!--
        天啊超髒的，不可思議地髒，但每頁都要各自訂的話最方便還是 inline style :/
        不然就用 section:nth-type 吧
    -->
    <img src="https://s3.amazonaws.com/registrano/upload_images/6951/Moztw-gathering-title.png" alt="摩茲連續聚" class="original" style="margin: 100px 119px 0;"/>
    <h1 style="margin-top: 10px;">Welcome!</h1>
</section>

<section>
    <h2>Mozilla? Firefox?</h2>
    <p>讓我們來看兩段VCR</p>
</section>
<section>
    <video src="https://videos.mozilla.org/serv/webmademovies/aboutmozilla2640x360.webm" id="aboutmozilla" controls class="subtitled"></video>
<div class="srt" data-video="aboutmozilla">?1
00:00:00,846 --> 00:00:03,822
Mozilla 是什麼？

2
00:00:03,822 --> 00:00:05,822
讓我試著回答你

3
00:00:05,824 --> 00:00:07,830
Mozilla 是一群聚在一起的人

4
00:00:09,810 --> 00:00:11,898
Mozilla 是一個全球性計畫

5
00:00:11,898 --> 00:00:13,858
是一個非營利組織

6
00:00:13,858 --> 00:00:15,893
是一個無與倫比的運動

7
00:00:15,893 --> 00:00:18,837
由非常非常熱情的人進行

8
00:00:18,886 --> 00:00:21,861
我想他吸引了喜歡助人的人

9
00:00:21,861 --> 00:00:24,806
以及想一同推動重要事情的人

10
00:00:24,881 --> 00:00:25,883
瘋狂的人

11
00:00:26,880 --> 00:00:30,863
Mozilla 以我們的產品 Firefox 而聞名

12
00:00:32,838 --> 00:00:37,828
Firefox 計畫成立於網路發展停滯期

13
00:00:37,828 --> 00:00:40,804
當時市場上唯一的瀏覽器是 IE

14
00:00:40,804 --> 00:00:41,891
一方面是競爭

15
00:00:41,891 --> 00:00:44,859
理想上需要付出代價的經濟財

16
00:00:44,859 --> 00:00:46,821
另一方面則是這樣說

17
00:00:46,821 --> 00:00:48,821
你的瀏覽器讓我的生活好多了

18
00:00:48,821 --> 00:00:49,886
以前上網時很慢

19
00:00:49,886 --> 00:00:51,897
常跳出廣告根本無法使用

20
00:00:51,897 --> 00:00:53,881
當時網路真的很糟  現在好多啦

21
00:00:53,881 --> 00:00:55,844
這就是2004年發生的事情

22
00:00:55,844 --> 00:00:56,889
我們啟動了 Firefox

23
00:00:58,814 --> 00:01:01,807
我們在瀏覽器中加入很多創新

24
00:01:01,807 --> 00:01:03,883
大部分目前的瀏覽器中都有

25
00:01:03,883 --> 00:01:05,840
很多好東西

26
00:01:05,840 --> 00:01:08,819
由過去非這個領域的人完成

27
00:01:08,819 --> 00:01:09,878
這是很重要的一件事情

28
00:01:11,873 --> 00:01:13,874
人們無法參與時不會產生創新

29
00:01:13,874 --> 00:01:16,859
不能接觸原始碼就沒有機會參與

30
00:01:17,884 --> 00:01:20,807
最終產生一個更豐富的環境

31
00:01:20,807 --> 00:01:22,857
當有更多的人嘗試他們的點子

32
00:01:22,857 --> 00:01:23,872
看看什麼發揮作用

33
00:01:23,872 --> 00:01:25,836
有時結果回到我們這

34
00:01:25,836 --> 00:01:26,868
當我們認為這是個好點子

35
00:01:26,868 --> 00:01:28,866
我們樂意使用提供給所有人

36
00:01:29,814 --> 00:01:31,805
Mozilla 是一個非常重要的實驗

37
00:01:31,805 --> 00:01:33,828
因為我們運作的像是個營利公司

38
00:01:33,829 --> 00:01:35,863
我們有高品質的產品與客戶

39
00:01:35,863 --> 00:01:38,824
而取代追求利益的股東

40
00:01:38,824 --> 00:01:40,810
我們有一個任務

41
00:01:40,810 --> 00:01:42,811
保持網路開放並提供選擇

42
00:01:42,811 --> 00:01:43,887
這是我們非營利的理由

43
00:01:43,887 --> 00:01:46,824
如此可以保持產品決策

44
00:01:46,824 --> 00:01:48,830
以使用者體驗為中心

45
00:01:48,830 --> 00:01:49,892
並造福大眾

46
00:01:49,892 --> 00:01:53,838
打造一個以人性為本的產品

47
00:01:53,838 --> 00:01:56,803
不汲汲於賺你的錢

48
00:02:07,862 --> 00:02:11,892
全是為了獨立且開放的網路

49
00:02:11,892 --> 00:02:16,899
如果 Mozilla 或其他組織沒有為此奮鬥

50
00:02:16,899 --> 00:02:21,821
網路會變成跟其他大眾媒體一樣

51
00:02:21,821 --> 00:02:23,888
被少數人掌控

52
00:02:23,888 --> 00:02:26,838
開放原始碼的意義是

53
00:02:26,838 --> 00:02:32,813
在沒有排斥與歧視中一同工作

54
00:02:32,813 --> 00:02:34,879
網路不只是你所用的東西

55
00:02:34,879 --> 00:02:36,856
他是一個你可以影響到的東西

56
00:02:36,856 --> 00:02:39,808
我們對於世界該有的模樣這樣想

57
00:02:39,808 --> 00:02:41,816
而我們努力實現

58
00:02:41,818 --> 00:02:43,847
讓每個人都可以接觸參與

59
00:02:44,820 --> 00:02:45,847
這就是不同之處

60
00:02:45,847 --> 00:02:47,864
（我們不只是另一個瀏覽器）

61
00:02:47,864 --> 00:02:50,878
（我們打造更好的網路）

62
00:02:50,878 --> 00:02:52,865
（你也能幫得上忙）
</div>
</section>

<section>
    <video src="https://videos.mozilla.org/serv/brand/Mozilla_Firefox_Manifesto_v0.1.ogv" id="firefoxdifferent" controls class="subtitled"></video>
<div class="srt" data-video="firefoxdifferent">?1
00:00:02,814 --> 00:00:05,872
我們的確打算當個與眾不同的瀏覽器

2
00:00:05,872 --> 00:00:09,879
在媒體上　我們名字後面沒有股票代號

3
00:00:09,879 --> 00:00:11,868
我們沒有淨利率

4
00:00:11,868 --> 00:00:14,882
沒有閃亮的代言明星

5
00:00:14,882 --> 00:00:16,832
我們不跟別人做一樣的交易

6
00:00:16,832 --> 00:00:20,864
不簽一樣的契約、握一樣的手

7
00:00:20,864 --> 00:00:23,876
我們就是如此

8
00:00:23,876 --> 00:00:27,834
我們是擁有獨立精神  非常不一樣的人

9
00:00:27,834 --> 00:00:29,888
用有點不同的方式做事

10
00:00:29,888 --> 00:00:32,852
當別的公司計較盈虧

11
00:00:32,852 --> 00:00:35,864
我們計較…該計較的價值

12
00:00:35,864 --> 00:00:38,895
當競爭者想將某些東西據為己有

13
00:00:38,895 --> 00:00:41,827
我們協助大眾自由取用

14
00:00:41,827 --> 00:00:45,821
當大多數的產品與技術　關起門來開發

15
00:00:45,821 --> 00:00:49,801
我們以開放的方式　在眾人眼前打造

16
00:00:49,801 --> 00:00:52,820
我們不為投資者汲汲營營

17
00:00:52,820 --> 00:00:54,852
只想著要回應你的需求

18
00:00:54,852 --> 00:00:56,889
這麼做不是為了好玩

19
00:00:56,889 --> 00:00:59,839
雖然也超乎想像地有趣

20
00:00:59,839 --> 00:01:03,836
我們這麼做　就因為相信這是正確的事

21
00:01:03,836 --> 00:01:05,879
我們相信原則甚於營利

22
00:01:05,879 --> 00:01:11,864
誠實與社群利益甚於保密

23
00:01:11,864 --> 00:01:15,836
比起想要掌控網路　我們更在乎它的發展

24
00:01:15,836 --> 00:01:19,873
視網路為公有資源　而非有利可圖的商品

25
00:01:19,873 --> 00:01:21,866
我們也相信創新的力量

26
00:01:21,866 --> 00:01:25,843
以使用者為優先、置於中心、主導發展

27
00:01:25,843 --> 00:01:26,898
但更重要的是

28
00:01:26,898 --> 00:01:29,802
我們相信你的能耐

29
00:01:29,802 --> 00:01:31,851
我們相信　想打造世界最棒的瀏覽器

30
00:01:31,851 --> 00:01:34,873
得由工程師、程式設計師、體驗設計師

31
00:01:34,873 --> 00:01:36,863
及像你一樣的人一起

32
00:01:36,863 --> 00:01:40,819
為此付出時間、天份、精神及支持

33
00:01:40,819 --> 00:01:43,819
我們也相信　只要一起懷抱這個想法

34
00:01:43,819 --> 00:01:45,889
就可以為大眾的利益

35
00:01:45,889 --> 00:01:47,890
及更美好的網路不斷創新

36
00:01:47,890 --> 00:01:51,864
網路也就能持續　讓美好的事情發生

37
00:01:51,864 --> 00:01:54,834
我們是 Mozilla Firefox

38
00:01:54,834 --> 00:01:56,870
不只是不一樣的瀏覽器

39
00:01:56,870 --> 00:01:59,890
更要讓事情變得不一樣
</div>
</section>

<section>
    <h2>moztw.org</h2>
    <p>Mozilla 台灣社群</p>
</section>

<section>
    <h2>Mozilla 宣言</h2>
    <p>以下節錄一些些...</p>
</section>
<section><q>網際網路是全球公用資源，應該保持開放並易於取用。</q></section>
<section><q>使用者應能依其個人意願決定網際網路的使用方式。</q></section>
<section><q>透明化的社群式流程則能促進參與、責任及信任。</q></section>
<section>
    <q>商業力量在網際網路發展中能帶來很多益處，維持商業目標與公眾利益的平衡相當重要。</q>
</section>
<section>
    <h2>&lt;/洗腦結束&gt;</h2>
</section>
<section>
    <h2>自我介紹</h2>
    <p>規則很簡單</p>
</section>
<section class="rules">
    <h3>1. 每個人輪流自我介紹，簡短有力即可</h3>
</section>
<section class="rules">
    <h3>2. 自我介紹結束後，大家針對<strong>「你的自介內容，是否已經讓我有點認識你」</strong>進行投票</h3>
</section>
<section class="rules">
    <h3>3. 如果半數以上的人覺得還不夠認識你，<strong>請重新補充</strong> :P</h3>
</section>
<section class="rules">
    <h3>4. 晚到的朋友自介後，可以挑<strong>兩個</strong>比較不認識的朋友請他重新自我介紹一下。</h3>
    <p>這次介紹完就不會投票了 XD</p>
</section>
<section>
    <h3>或許你可以說這些：</h3>
    <ul>
        <li>姓名 / 網路上常用暱稱</li>
        <li>現職 / 特殊技能 / 興趣</li>
        <li>主要活躍專案 / 社群</li>
        <li><del>晚餐你想請客</del></li>
        <li>其他你想得到的...</li>
    </ul>
    <p><strong>開始吧！</strong></p>
</section>
<!-- Your Style -->
<!-- Define the style of your presentation -->
<link href='//fonts.googleapis.com/css?family=Oswald' rel='stylesheet'>
<style>
  html { background-color: black; }
  body { background-color: black; }
  /* A section is a slide. It's size is 800x600, and this will never change */
  section {
      font-family: 'MetaNormal-Roman','Oswald',arial,'文泉驛微米黑','微軟正黑體',serif;
      font-size: 40px;
      color: white;
  }
  section:first-of-type {
      background-color: white;
      color: black;
  }

  section.rules h3{
      text-indent: -57px;
  }
  p {text-align: center;}

  h1, h2 {
    margin-top: 200px;
    text-align: center;
    font-size: 80px;
  }
  h3 {
    margin: 100px 0 50px 100px;
  }

  ul {
      margin: 50px 200px;
  }

strong {
    color: yellow;
}

del { color: #333333; }

  q {
    display: inline-block;
    width: 700px;
    height: 600px;
    background-color: black;
    color: white;
    font-size: 60px;
    padding: 50px;
  }

  img.original {
      width: auto; height: auto;
      position: static;
      background-color: transparent;
  }

  img.fillwidth {
      width: 800px; height: auto;
  }

  img.fillheight {
      width: auto; height: 600px;
  }

  video.subtitled {
      z-index: 2;
  }

  div.srt {
      position: absolute;
      z-index: 1;
      width: 800px;
      left:0; bottom:40px;
      font-size: 28px;
      color: white;
      text-align: center;
      text-shadow: 0 0 3px black;
  }

  img, video {
    width: 800px;
    height: 600px;
    position: absolute;
    top: 0;
    background-color: black;
    z-index: -1;
  }

  footer {
    position: absolute;
    bottom: 10px;
    right: 20px;
  }

  /* Transition effect */
  /* Feel free to change the transition effect for original
     animations. See here:
     https://developer.mozilla.org/en/CSS/CSS_transitions
     How to use CSS3 Transitions: */
  section {
      -moz-transition: left 400ms linear 0s;
      -webkit-transition: left 400ms linear 0s;
      -ms-transition: left 400ms linear 0s;
      transition: left 400ms linear 0s;
  }

  /* Before */
  section { left: -150%; }
  /* Now */
  section[aria-selected] { left: 0; }
  /* After */
  section[aria-selected] ~ section { left: +150%; }

  /* Incremental elements */

  /* By default, visible */
  .incremental > * { opacity: 1; }

  /* The current item */
  .incremental > *[aria-selected] { color: red; opacity: 1; }

  /* The items to-be-selected */
  .incremental > *[aria-selected] ~ * { opacity: 0.2; }

</style>

<!-- {{{{ dzslides core
#
#
#     __  __  __       .  __   ___  __
#    |  \  / /__` |    | |  \ |__  /__`
#    |__/ /_ .__/ |___ | |__/ |___ .__/ core :€
#
#
# The following block of code is not supposed to be edited.
# But if you want to change the behavior of these slides,
# feel free to hack it!
#
-->

<!-- Default Style -->
<style>
  * { margin: 0; padding: 0; }
  details { display: none; }
  body {
    width: 800px; height: 600px;
    margin-left: -400px; margin-top: -300px;
    position: absolute; top: 50%; left: 50%;
    overflow: hidden;
  }
  section {
    position: absolute;
    pointer-events: none;
    width: 100%; height: 100%;
  }
  section[aria-selected] { pointer-events: auto; }
  html { overflow: hidden; }
  body { display: none; }
  body.loaded { display: block; }
  .incremental {visibility: hidden; }
  .incremental[active] {visibility: visible; }
</style>

<script>
  var Dz = {
    remoteWindows: [],
    idx: -1,
    step: 0,
    slides: null,
    params: {
      autoplay: "1"
    }
  };

  Dz.init = function() {
    document.body.className = "loaded";
    this.slides = $$("body > section");
    this.setupParams();
    this.onhashchange();
    this.setupTouchEvents();
    this.onresize();
  }

  Dz.setupParams = function() {
    var p = window.location.search.substr(1).split('&');
    p.forEach(function(e, i, a) {
      var keyVal = e.split('=');
      Dz.params[keyVal[0]] = decodeURIComponent(keyVal[1]);
    });
  }

  Dz.onkeydown = function(aEvent) {
    // Don't intercept keyboard shortcuts
    if (aEvent.altKey
      || aEvent.ctrlKey
      || aEvent.metaKey
      || aEvent.shiftKey) {
      return;
    }
    if ( aEvent.keyCode == 37 // left arrow
      || aEvent.keyCode == 38 // up arrow
      || aEvent.keyCode == 33 // page up
    ) {
      aEvent.preventDefault();
      this.back();
    }
    if ( aEvent.keyCode == 39 // right arrow
      || aEvent.keyCode == 40 // down arrow
      || aEvent.keyCode == 34 // page down
    ) {
      aEvent.preventDefault();
      this.forward();
    }
    if (aEvent.keyCode == 35) { // end
      aEvent.preventDefault();
      this.goEnd();
    }
    if (aEvent.keyCode == 36) { // home
      aEvent.preventDefault();
      this.goStart();
    }
    if (aEvent.keyCode == 32) { // space
      aEvent.preventDefault();
      this.toggleContent();
    }
  }

  /* Touch Events */

  Dz.setupTouchEvents = function() {
    var orgX, newX;
    var tracking = false;

    var db = document.body;
    db.addEventListener("touchstart", start.bind(this), false);
    db.addEventListener("touchmove", move.bind(this), false);

    function start(aEvent) {
      aEvent.preventDefault();
      tracking = true;
      orgX = aEvent.changedTouches[0].pageX;
    }

    function move(aEvent) {
      if (!tracking) return;
      newX = aEvent.changedTouches[0].pageX;
      if (orgX - newX > 100) {
        tracking = false;
        this.forward();
      } else {
        if (orgX - newX < -100) {
          tracking = false;
          this.back();
        }
      }
    }
  }

  /* Adapt the size of the slides to the window */

  Dz.onresize = function() {
    var db = document.body;
    var sx = db.clientWidth / window.innerWidth;
    var sy = db.clientHeight / window.innerHeight;
    var transform = "scale(" + (1/Math.max(sx, sy)) + ")";

    db.style.MozTransform = transform;
    db.style.WebkitTransform = transform;
    db.style.OTransform = transform;
    db.style.msTransform = transform;
    db.style.transform = transform;
  }


  Dz.getDetails = function(aIdx) {
    var s = $("section:nth-of-type(" + aIdx + ")");
    var d = s.$("details");
    return d ? d.innerHTML : "";
  }

  Dz.onmessage = function(aEvent) {
    var argv = aEvent.data.split(" "), argc = argv.length;
    argv.forEach(function(e, i, a) { a[i] = decodeURIComponent(e) });
    var win = aEvent.source;
    if (argv[0] === "REGISTER" && argc === 1) {
      this.remoteWindows.push(win);
      this.postMsg(win, "REGISTERED", document.title, this.slides.length);
      this.postMsg(win, "CURSOR", this.idx + "." + this.step);
      return;
    }
    if (argv[0] === "BACK" && argc === 1)
      this.back();
    if (argv[0] === "FORWARD" && argc === 1)
      this.forward();
    if (argv[0] === "START" && argc === 1)
      this.goStart();
    if (argv[0] === "END" && argc === 1)
      this.goEnd();
    if (argv[0] === "TOGGLE_CONTENT" && argc === 1)
      this.toggleContent();
    if (argv[0] === "SET_CURSOR" && argc === 2)
      window.location.hash = "#" + argv[1];
    if (argv[0] === "GET_CURSOR" && argc === 1)
      this.postMsg(win, "CURSOR", this.idx + "." + this.step);
    if (argv[0] === "GET_NOTES" && argc === 1)
      this.postMsg(win, "NOTES", this.getDetails(this.idx));
  }

  Dz.toggleContent = function() {
    // If a Video is present in this new slide, play it.
    // If a Video is present in the previous slide, stop it.
    var s = $("section[aria-selected]");
    if (s) {
      var video = s.$("video");
      if (video) {
        if (video.ended || video.paused) {
          video.play();
        } else {
          video.pause();
        }
      }
    }
  }

  Dz.setCursor = function(aIdx, aStep) {
    // If the user change the slide number in the URL bar, jump
    // to this slide.
    aStep = (aStep != 0 && typeof aStep !== "undefined") ? "." + aStep : ".0";
    window.location.hash = "#" + aIdx + aStep;
  }

  Dz.onhashchange = function() {
    var cursor = window.location.hash.split("#"),
        newidx = 1,
        newstep = 0;
    if (cursor.length == 2) {
      newidx = ~~cursor[1].split(".")[0];
      newstep = ~~cursor[1].split(".")[1];
      if (newstep > Dz.slides[newidx - 1].$$('.incremental > *').length) {
        newstep = 0;
        newidx++;
      }
    }
    if (newidx != this.idx) {
      this.setSlide(newidx);
    }
    if (newstep != this.step) {
      this.setIncremental(newstep);
    }
    for (var i = 0; i < this.remoteWindows.length; i++) {
      this.postMsg(this.remoteWindows[i], "CURSOR", this.idx + "." + this.step);
    }
  }

  Dz.back = function() {
    if (this.idx == 1 && this.step == 0) {
      return;
    }
    if (this.step == 0) {
      this.setCursor(this.idx - 1,
                     this.slides[this.idx - 2].$$('.incremental > *').length);
    } else {
      this.setCursor(this.idx, this.step - 1);
    }
  }

  Dz.forward = function() {
    if (this.idx >= this.slides.length &&
        this.step >= this.slides[this.idx - 1].$$('.incremental > *').length) {
        return;
    }
    if (this.step >= this.slides[this.idx - 1].$$('.incremental > *').length) {
      this.setCursor(this.idx + 1, 0);
    } else {
      this.setCursor(this.idx, this.step + 1);
    }
  }

  Dz.goStart = function() {
    this.setCursor(1, 0);
  }

  Dz.goEnd = function() {
    var lastIdx = this.slides.length;
    var lastStep = this.slides[lastIdx - 1].$$('.incremental > *').length;
    this.setCursor(lastIdx, lastStep);
  }

  Dz.setSlide = function(aIdx) {
    this.idx = aIdx;
    var old = $("section[aria-selected]");
    var next = $("section:nth-of-type("+ this.idx +")");
    if (old) {
      old.removeAttribute("aria-selected");
      var video = old.$("video");
      if (video) {
        video.pause();
      }
    }
    if (next) {
      next.setAttribute("aria-selected", "true");
      var video = next.$("video");
      if (video && !!+this.params.autoplay) {
        video.play();
      }
    } else {
      // That should not happen
      this.idx = -1;
      // console.warn("Slide doesn't exist.");
    }
  }

  Dz.setIncremental = function(aStep) {
    this.step = aStep;
    var old = this.slides[this.idx - 1].$('.incremental > *[aria-selected]');
    if (old) {
      old.removeAttribute('aria-selected');
    }
    var incrementals = this.slides[this.idx - 1].$$('.incremental');
    if (this.step <= 0) {
      incrementals.forEach(function(aNode) {
        aNode.removeAttribute('active');
      });
      return;
    }
    var next = this.slides[this.idx - 1].$$('.incremental > *')[this.step - 1];
    if (next) {
      next.setAttribute('aria-selected', true);
      next.parentNode.setAttribute('active', true);
      var found = false;
      incrementals.forEach(function(aNode) {
        if (aNode != next.parentNode)
          if (found)
            aNode.removeAttribute('active');
          else
            aNode.setAttribute('active', true);
        else
          found = true;
      });
    } else {
      setCursor(this.idx, 0);
    }
    return next;
  }

  Dz.postMsg = function(aWin, aMsg) { // [arg0, [arg1...]]
    aMsg = [aMsg];
    for (var i = 2; i < arguments.length; i++)
      aMsg.push(encodeURIComponent(arguments[i]));
    aWin.postMessage(aMsg.join(" "), "*");
  }

  window.onload = Dz.init.bind(Dz);
  window.onkeydown = Dz.onkeydown.bind(Dz);
  window.onresize = Dz.onresize.bind(Dz);
  window.onhashchange = Dz.onhashchange.bind(Dz);
  window.onmessage = Dz.onmessage.bind(Dz);
</script>


<script> // Helpers
  if (!Function.prototype.bind) {
    Function.prototype.bind = function (oThis) {

      // closest thing possible to the ECMAScript 5 internal IsCallable
      // function
      if (typeof this !== "function")
      throw new TypeError(
        "Function.prototype.bind - what is trying to be fBound is not callable"
      );

      var aArgs = Array.prototype.slice.call(arguments, 1),
          fToBind = this,
          fNOP = function () {},
          fBound = function () {
            return fToBind.apply( this instanceof fNOP ? this : oThis || window,
                   aArgs.concat(Array.prototype.slice.call(arguments)));
          };

      fNOP.prototype = this.prototype;
      fBound.prototype = new fNOP();

      return fBound;
    };
  }

  var $ = (HTMLElement.prototype.$ = function(aQuery) {
    return this.querySelector(aQuery);
  }).bind(document);

  var $$ = (HTMLElement.prototype.$$ = function(aQuery) {
    return this.querySelectorAll(aQuery);
  }).bind(document);

  NodeList.prototype.forEach = function(fun) {
    if (typeof fun !== "function") throw new TypeError();
    for (var i = 0; i < this.length; i++) {
      fun.call(this, this[i]);
    }
  }

</script>

<script>
/*
 * (Originally) jQuery srt
 *
 * version 0.1 (November 28, 2008)
 * modified by BobChao for DZSlides on Oct 22, 2011
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */
/*
  usage:
    <video src="example.ogg" id="examplevideo" />
    <div class="srt" data-video="examplevideo" > {content of srt} </div>

  the contents of the div is parsed as srt.
*/

  function toSeconds(t) {
    var s = 0.0
    if(t) {
      var p = t.split(':');
      for(i=0;i<p.length;i++)
        s = s * 60 + parseFloat(p[i].replace(',', '.'))
    }
    return s;
  }
  function strip(s) {
    return s.replace(/^\s+|\s+$/g,"");
  }
  function playSubtitles(subtitleElement) {
   var videoId = subtitleElement.getAttribute('data-video');
    var srt = subtitleElement.textContent;
    var currentSubtitle = -1;
    subtitleElement.innerHTML = "";
    subtitleElement.style.zIndex = 2;
    srt = srt.replace(/\r\n|\r|\n/g, '\n')

    var subtitles = {};
    srt = strip(srt);
    var srt_ = srt.split('\n\n');
    for(s in srt_) {
        st = srt_[s].split('\n');
        if(st.length >=2) {
          n = st[0];
          i = strip(st[1].split(' --> ')[0]);
          o = strip(st[1].split(' --> ')[1]);
          t = st[2];
          if(st.length > 2) {
            for(j=3; j<st.length;j++)
              t += '\n'+st[j];
          }
          is = toSeconds(i);
          os = toSeconds(o);
          subtitles[is] = {i:i, o: o, t: t};
        }
    }

    var ival = setInterval(function() {
      var currentTime = document.getElementById(videoId).currentTime;
      var subtitle = -1;
      for(s in subtitles) {
        if(s > currentTime)
          break
        subtitle = s;
      }
      if(subtitle > 0) {
        if(subtitle != currentSubtitle) {
          subtitleElement.innerHTML = subtitles[subtitle].t;
          currentSubtitle=subtitle;
        } else if(subtitles[subtitle].o < currentTime) {
          subtitleElement.innerHTML = "";
        }
      }
    }, 100);
  }
  $$('.srt').forEach(function(obj) {
    var subtitleElement = obj;
    var videoId = subtitleElement.getAttribute('data-video');
    if(!videoId) return;
    playSubtitles(subtitleElement);
  });
</script>

<!-- vim: set fdm=marker: }}} -->

